{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","services/UserService.ts","components/AddTodoForm/AddTodoForm.tsx","services/TodoService.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","getUserById","userId","users","find","AddTodoForm","onTodoCreated","initialNewTodo","titleRegex","RegExp","useState","newTodo","setNewTodo","isTitleErrorShown","setIsTitleErrorShown","isUserErrorShown","setIsUserErrorShown","action","method","onSubmit","event","preventDefault","handleSubmit","type","value","placeholder","onChange","target","replace","handleTitleChanged","newUserId","handleUserSelect","disabled","getNextId","Math","max","initialTodos","usersFromServer","App","setTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af0a48a7.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({\n  user: { email, name },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>\n    {name}\n  </a>\n);\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, completed, title, user,\n  },\n}) => (\n  <article\n    className={cn('TodoInfo', {\n      'TodoInfo--completed': completed,\n    })}\n    data-id={id}\n  >\n    <h2 className=\"TodoInfo__title\">{title}</h2>\n\n    {user && (<UserInfo user={user} />)}\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos\n      .map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\n\nexport function getUserById(userId: number, users: User[]): User | null {\n  return users.find(user => user.id === userId) || null;\n}\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUserById } from '../../services/UserService';\n\ntype Props = {\n  users: User[],\n  onTodoCreated: (newTodo: Todo) => void,\n};\n\nexport const AddTodoForm: React.FC<Props> = ({\n  users,\n  onTodoCreated,\n}) => {\n  const initialNewTodo: Todo = {\n    id: 0,\n    title: '',\n    completed: false,\n    userId: 0,\n    user: null,\n  };\n\n  const titleRegex = new RegExp(/([^а-щьюяґєії'|^a-z|^\\d|^ +])/ig);\n\n  const [newTodo, setNewTodo] = useState<Todo>(initialNewTodo);\n  const [isTitleErrorShown, setIsTitleErrorShown] = useState(false);\n  const [isUserErrorShown, setIsUserErrorShown] = useState(false);\n\n  const normalizeTitle = (title: string) => {\n    return title.replace(titleRegex, '');\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newUserId: number = +event.target.value;\n\n    setIsUserErrorShown(false);\n\n    setNewTodo({\n      ...newTodo,\n      user: getUserById(newUserId, users),\n      userId: newUserId,\n    });\n  };\n\n  const handleTitleChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsTitleErrorShown(false);\n\n    setNewTodo({\n      ...newTodo,\n      title: normalizeTitle(event.target.value),\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsUserErrorShown(!newTodo.user);\n    setIsTitleErrorShown(!newTodo.title);\n\n    if (!newTodo.user || !newTodo.title) {\n      return;\n    }\n\n    onTodoCreated(newTodo);\n\n    setNewTodo(initialNewTodo);\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={(event) => handleSubmit(event)}\n    >\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={newTodo.title}\n          placeholder=\"Enter title\"\n          onChange={(event) => handleTitleChanged(event)}\n        />\n        {isTitleErrorShown\n          && (<span className=\"error\">Please enter a title</span>)}\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          value={newTodo.userId}\n          onChange={(event) => handleUserSelect(event)}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(user => (\n            <option value={user.id} key={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {isUserErrorShown\n          && (<span className=\"error\">Please choose a user</span>)}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function getNextId(todos: Todo[]): number {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n}\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { AddTodoForm } from './components/AddTodoForm/AddTodoForm';\nimport { getUserById } from './services/UserService';\nimport { getNextId } from './services/TodoService';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId, usersFromServer),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <AddTodoForm\n        users={usersFromServer}\n        onTodoCreated={(newTodo) => setTodos([...todos, {\n          ...newTodo,\n          id: getNextId(todos),\n        }])}\n      />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}